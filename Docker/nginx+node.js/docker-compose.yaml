version: '3'

services:
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    image: ${DOCKERHUB_USER}/${DOCKERHUB_REPO}:desafio-docker-nginx
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 30s
    entrypoint: dockerize -wait http://app:3000 -timeout 300s nginx -g "daemon off;"
    container_name: nginx
    networks:
      - node-network
    ports:
      - "8080:80"
    depends_on:
      - app

  app:
    build:
      context: ./node
      dockerfile: Dockerfile
    image: ${DOCKERHUB_USER}/${DOCKERHUB_REPO}:desafio-docker-node
    container_name: app
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 30s
    entrypoint: wait-for db:3306 -t 40 -- /home/node/app/start.sh
    networks:
      - node-network
    volumes:
      - ./node/src:/home/node/app
    tty: true
    depends_on:
      - db

  db:
    build:
      context: ./mysql
      dockerfile: Dockerfile
    image: ${DOCKERHUB_USER}/${DOCKERHUB_REPO}:desafio-docker-mysql
    command: --innodb-use-native-aio=0 
    container_name: db
    restart: always
    tty: true
    volumes:
      - ./mysql/db:/var/lib/mysql
    networks:
      - node-network

networks:
  node-network:
    driver: bridge
